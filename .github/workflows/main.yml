name: Android CI
on: [push]
jobs:
  Build-Android-Developer-Version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Build the Wallet app
        run: |
          cd chapter08
          ./gradlew build

      - name: Android built-tools directory
        id: android_build_tools
        run: |
          build_tools_version_dirs=( $(ls $ANDROID_SDK_ROOT/build-tools | sort --reverse) )
          highest_build_tools_dir=${build_tools_version_dirs[0]}
          echo "::set-output name=dir::$ANDROID_SDK_ROOT/build-tools/${highest_build_tools_dir}"

      - name: zipalign the apks
        run: |
          apks=(chapter08/app/build/outputs/apk/*/app-*.apk)
          for unaligned_apk in ${apks[@]}; do
            output_dir=$(/bin/dirname $unaligned_apk)
            filename=$(/bin/basename $unaligned_apk)
            extension="${filename##*.}"
            filename="${filename%.*}"
            aligned_apk="${output_dir}/${filename}-aligned.${extension}"
            ${{ steps.android_build_tools.outputs.dir }}/zipalign -v -p 4 "${unaligned_apk}" "${aligned_apk}"
          done

      - id: beta_publisher
        name: Vault AppRole beta_publisher login
        run: |
          echo "{
            \"role_id\" : \"${{ secrets.BETA_PUBLISHER_VAULT_ROLE_ID }}\",
            \"secret_id\" : \"${{ secrets.BETA_PUBLISHER_VAULT_SECRET_ID }}\"
          }" > approle_login_payload.json

          local_token=$(curl --request POST --data @approle_login_payload.json "${{ secrets.VAULT_ADDR }}/v1/auth/approle/login" | jq -r ".auth.client_token")
          echo "::add-mask::$local_token"
          echo "::set-output name=token::$local_token"

      - name: Sign Beta APK
        run: |
          vault_path_wallet="${{ secrets.VAULT_ADDR }}/v1/kv/data/users/margo/magic-dollar-wallet"
          export keystore_password=$(curl --request GET --header "X-Vault-Token: ${{ steps.beta_publisher.outputs.token }}" $vault_path_wallet | jq -r ".data.data.keystore_password")
          echo "::add-mask::$keystore_password"
          unsigned_aligned_apk_path="chapter08/app/build/outputs/apk/release/app-release-unsigned-aligned.apk"
          ${{ steps.android_build_tools.outputs.dir }}/apksigner sign -ks chapter08/beta.keystore --ks-pass env:keystore_password --out magic-dollar.apk "$unsigned_aligned_apk_path"

      - name: Archive Signed Beta App
        uses: actions/upload-artifact@v2
        with:
          name: apks
          path: magic-dollar.apk

      - name: Print MS App Center Upload Instructions
        run: |
          echo "After signing, upload to MS App Center with these commands:"
          echo "# make sure you export the MS App Center API token"
          echo "# export MAGIC_DOLLAR_APK_API_TOKEN=<api token>"
          echo "./upload_to_ms_appcenter.sh magic-dollar.apk"
